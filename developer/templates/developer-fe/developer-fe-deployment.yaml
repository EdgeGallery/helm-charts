############################################################################
# Copyright 2020-2021 Huawei Technologies Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#  http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
############################################################################


apiVersion: apps/v1
kind: Deployment
metadata:
  name: developer-fe
  namespace: default
  labels:
    app: developer-fe
spec:
  selector:
    matchLabels:
      app: developer-fe
  replicas: 1
  template:
    metadata:
      labels:
        app: developer-fe
    spec:
      initContainers:
        - name: init-usermgmt
          image: {{ .Values.images.initservicecenter.repository }}:{{ .Values.images.initservicecenter.tag }}
          imagePullPolicy: {{ .Values.images.initservicecenter.pullPolicy }}
          command: ['sh', '-c', "until curl -k -f {{ .Values.global.oauth2.authServerAddress }}; do echo waiting for auth server; sleep 2; done"]
      containers:
        - name: developer-fe
          image: {{ .Values.images.developerFe.repository }}:{{ .Values.images.developerFe.tag }}
          imagePullPolicy: {{ .Values.images.developerFe.pullPolicy }}
          ports:
            - containerPort: 8443
          livenessProbe:
            httpGet:
              path: {{ .Values.livenessProbe.path}}
              port: {{ .Values.expose.developerFe.port }}
              scheme: {{ .Values.livenessProbe.scheme}}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds}}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds}}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds}}
            successThreshold: {{ .Values.livenessProbe.successThreshold}}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold}}
          readinessProbe:
            httpGet:
              path: {{ .Values.readinessProbe.path}}
              port: {{ .Values.expose.developerFe.port }}
              scheme: {{ .Values.readinessProbe.scheme}}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds}}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds}}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds}}
          env:
            - name: LOG_DIR
              value: /var/log/developer-fe
            - name: LOG_FILE_NAME
              value: developer-fe
            - name: LISTEN_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: SC_ADDRESS
              value: http{{ if .Values.global.ssl.enabled }}s{{ end }}://service-center:30100
            - name: AUTH_SERVER_ADDRESS
              value: {{ .Values.global.oauth2.authServerAddress }}
            - name: AUTH_SERVER_ADDRESS_CLIENTACCESS
              value: {{ .Values.global.oauth2.authServerAddressClientAccess }}
            - name: REDIRECT_URI_PARAM
              value: {{ .Values.global.oauth2.redirectUriParam }}
            - name: COOKIE_NAME
              value: DEVELOPERSESSIONID
            - name: CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: developer-fe-secret
                  key: clientId
            - name: CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: developer-fe-secret
                  key: clientSecret
            - name: SSL_ENABLED
              value: {{ quote .Values.global.ssl.enabled }}
            - name: IS_SECURE_BACKEND
              value: {{ quote .Values.global.ssl.enabled }}
            {{- if .Values.global.ssl.enabled }}
            - name: SSL_KEY_STORE_PATH
              value: /usr/app/ssl/keystore.p12
            - name: SSL_KEY_STORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.ssl.secretName }}
                  key: keystorePassword
            - name: SSL_KEY_STORE_TYPE
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.ssl.secretName }}
                  key: keystoreType
            - name: SSL_KEY_ALIAS
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.ssl.secretName }}
                  key: keyAlias
            {{- end }}
          volumeMounts:
            {{- if .Values.global.ssl.enabled }}
            - mountPath: /usr/app/ssl
              name: developer-fe-keystore
            {{- end }}
            {{- if .Values.global.persistence.enabled }}
            - mountPath: /var/log/developer-fe
              name: developer-fe-log
            {{- end }}
      volumes:
        {{- if .Values.global.ssl.enabled }}
        - name: developer-fe-keystore
          secret:
            secretName: {{ .Values.global.ssl.secretName }}
            items:
              - key: keystore.p12
                path: keystore.p12
        {{- end }}
        {{- if .Values.global.persistence.enabled }}
        - name: developer-fe-log
          persistentVolumeClaim:
            claimName: developer-fe-log-pvc
        {{- end }}
{{- if .Values.global.persistence.enabled }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: developer-fe-log-pvc
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: {{ quote .Values.global.persistence.storageClassName }}
  resources:
    requests:
      storage: 1Gi
{{- end }}
