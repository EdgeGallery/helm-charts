############################################################################
# Copyright 2020 Huawei Technologies Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#  http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
############################################################################


apiVersion: apps/v1
kind: Deployment
metadata:
  name: mecm-appo
  namespace: default
  labels:
    app: mecm-appo
spec:
  selector:
    matchLabels:
      app: mecm-appo
  replicas: 1
  template:
    metadata:
      labels:
        app: mecm-appo
    spec:
      initContainers:
        - name: check-db-ready
          image: {{ .Values.images.postgres.repository }}:{{ .Values.images.postgres.tag }}
          command: ['sh', '-c', 'until pg_isready -h  mecm-postgres -p 5432; do echo waiting for database; sleep 2; done;'] 
      containers:
        - image: {{ .Values.images.appo.repository }}:{{ .Values.images.appo.tag }}
          imagePullPolicy: {{ .Values.images.appo.pullPolicy }}
          name: mecm-appo
          livenessProbe:
            httpGet:
              path: /appo/v1/health
              port: {{ .Values.expose.appo.port }}
              scheme: {{ .Values.livenessProbe.scheme}}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds}}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds}}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds}}
            successThreshold: {{ .Values.livenessProbe.successThreshold}}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold}}

          readinessProbe:
            httpGet:
              path: /appo/v1/health
              port: {{ .Values.expose.appo.port }}
              scheme: {{ .Values.readinessProbe.scheme}}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds}}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds}}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds}}
          env:
            - name: LOG_DIR
              value: /usr/app/log
            - name: LISTEN_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP    
            - name: SSL_KEY_STORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.ssl.secretName }}
                  key: keystorePassword
            - name: SSL_TRUST_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.ssl.secretName }}
                  key: truststorePassword
            - name: SSL_KEY_STORE_TYPE
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.ssl.secretName }}
                  key: keystoreType
            - name: SSL_KEY_ALIAS
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.ssl.secretName }}
                  key: keyAlias
            - name: APPO_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.mecm.secretName }}
                  key: postgresPassword
          ports:
            - containerPort: 8091
          resources: {}
          volumeMounts:

            - mountPath: /usr/app/ssl
              name: appo-keystore
              readOnly: true

            {{- if .Values.global.persistence.enabled }}
            - name: appo-log
              mountPath: /usr/app/log
            {{- end }}
      volumes:

        - name: appo-keystore
          secret:
            secretName: {{ .Values.ssl.secretName }}
            items:
              - key: keystore.p12
                path: keystore.p12
                mode: 0644
              - key: keystore.jks
                path: keystore.jks
                mode: 0644

        {{- if .Values.global.persistence.enabled }}
        - name: appo-log
          hostPath:
            path: /var/log/edgegallery/appo
        {{- end }}


